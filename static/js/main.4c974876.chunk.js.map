{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","position","setPosition","listSize","length","lastPosition","carouselWidth","isNextDisabled","isPrevDisabled","useEffect","className","style","width","transform","transition","map","image","src","alt","type","onClick","prevPosition","disabled","defaultOptions","App","options","setOptions","GetOptions","event","target","name","value","newValue","prevOptions","action","method","htmlFor","id","min","onChange","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c974876.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nconst Carousel: React.FC <Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [position, setPosition] = useState(0);\n  const listSize = itemWidth * images.length;\n  const lastPosition = -(images.length - frameSize);\n  const carouselWidth = frameSize * itemWidth;\n  const isNextDisabled = position === lastPosition && !infinite;\n  const isPrevDisabled = position === 0 && !infinite;\n\n  const prevImage = () => {\n    if (position < 0) {\n      setPosition((prevPosition => (\n        prevPosition + step < 0\n          ? prevPosition + step\n          : 0\n      )));\n\n      return;\n    }\n\n    setPosition(lastPosition);\n  };\n\n  const nextImage = () => {\n    if (position > lastPosition) {\n      setPosition((prevPosition => (\n        prevPosition - step > lastPosition\n          ? prevPosition - step\n          : lastPosition\n      )));\n\n      return;\n    }\n\n    setPosition(0);\n  };\n\n  useEffect(() => setPosition(0), [frameSize]);\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${carouselWidth}px`,\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(${position * itemWidth}px)`,\n          transition: `transform ${animationDuration}ms`,\n          width: listSize,\n        }}\n      >\n        {images.map((image) => (\n          <li\n            key={image}\n            className=\"Carousel__link\"\n            style={{\n              width: itemWidth,\n            }}\n          >\n            <img\n              className=\"Carousel__img\"\n              src={image}\n              alt={image}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          onClick={prevImage}\n          disabled={isPrevDisabled}\n        >\n          Prev\n        </button>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={nextImage}\n          disabled={isNextDisabled}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst defaultOptions = {\n  itemWidth: 130,\n  frameSize: 3,\n  step: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nconst App: React.FC = () => {\n  const [options, setOptions] = useState(defaultOptions);\n  const {\n    itemWidth,\n    frameSize,\n    step,\n    animationDuration,\n    infinite,\n  } = options;\n\n  const GetOptions = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    const newValue = name === 'infinite' ? !infinite : +value;\n\n    setOptions(prevOptions => ({\n      ...prevOptions,\n      [name]: newValue,\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\" className=\"App__title\">Carousel with {images.length} images</h1>\n\n      <form action=\"#\" className=\"App__form\" method=\"pos\">\n        <label htmlFor=\"width\" className=\"App__label\">\n          Item Width:&nbsp;\n          <input\n            type=\"number\"\n            className=\"App__input\"\n            id=\"width\"\n            name=\"itemWidth\"\n            min={defaultOptions.itemWidth}\n            step=\"10\"\n            value={itemWidth}\n            onChange={GetOptions}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"frameId\">\n          Frame Size:\n          <input\n            type=\"number\"\n            className=\"App__input\"\n            id=\"frameId\"\n            name=\"frameSize\"\n            min={defaultOptions.frameSize}\n            step=\"1\"\n            value={frameSize}\n            onChange={GetOptions}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"stepId\">\n          Step:\n          <input\n            type=\"number\"\n            className=\"App__input\"\n            id=\"stepId\"\n            name=\"step\"\n            min={defaultOptions.step}\n            step=\"1\"\n            value={step}\n            onChange={GetOptions}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"animationDurationId\">\n          Animation Duration:\n          <input\n            type=\"number\"\n            className=\"App__input\"\n            id=\"animationDurationId\"\n            name=\"animationDuration\"\n            min={defaultOptions.animationDuration}\n            step=\"100\"\n            value={animationDuration}\n            onChange={GetOptions}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"infiniteId\">\n          Infinite:\n          <input\n            type=\"checkbox\"\n            className=\"App__input\"\n            id=\"infiniteId\"\n            name=\"infinite\"\n            checked={infinite}\n            onChange={GetOptions}\n          />\n        </label>\n      </form>\n\n      <Carousel\n        images={images}\n        {...options}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}